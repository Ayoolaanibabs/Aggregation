// <auto-generated />
using System;
using AggregationCRS.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AggregationCRS.EntityFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240624135609_Added_AggrgationMonthToCustomerStreamAggregation")]
    partial class Added_AggrgationMonthToCustomerStreamAggregation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AggregationCRS.Domain.Entities.ActivityAggregation", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DailyActivitySummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlobalActivityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("EntityKey");

                    b.HasIndex("CustomerNumber");

                    b.ToTable("ActivityAggregationTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.ActivityShortTermMemory", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ref");

                    b.HasIndex("ActDate");

                    b.ToTable("ActivityShortTermMemoryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.ConcessionUtilization", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActivityReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ConcessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GLAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("UtilizationDate")
                        .HasColumnType("date");

                    b.Property<double>("UtilizedAmount")
                        .HasColumnType("float");

                    b.HasKey("EntityKey");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("CustomerNumber");

                    b.HasIndex("GLAccount");

                    b.ToTable("CONCESSION_UTILIZATION_HISTORY");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.ConcessionUtilizationSummary", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GLAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("MonthYear")
                        .HasColumnType("date");

                    b.Property<string>("ShortMemory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UtilizedAmount")
                        .HasColumnType("float");

                    b.HasKey("EntityKey");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("CustomerNumber");

                    b.HasIndex("GLAccount");

                    b.ToTable("ConcessionUtilizationSummary");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.CustomerStreamAggregation", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("AggregationMonth")
                        .HasColumnType("date");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreamCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StreamType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EntityKey");

                    b.HasIndex("AggregationMonth");

                    b.HasIndex("CustomerNumber");

                    b.HasIndex("StreamCurrency");

                    b.HasIndex("StreamId");

                    b.HasIndex("StreamType");

                    b.ToTable("CustomerStreamAggregationTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.CustomerStreamShortTermMemory", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ref");

                    b.HasIndex("ActDate");

                    b.ToTable("CustomerStreamShortTermMemoryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.DailyGLComputationSummary", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ActualFlow")
                        .HasColumnType("float");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Difference")
                        .HasColumnType("float");

                    b.Property<double>("ExpectedFlow")
                        .HasColumnType("float");

                    b.Property<string>("GLAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SummaryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EntityKey");

                    b.HasIndex("GLAccount");

                    b.HasIndex("SummaryDate");

                    b.ToTable("DailyGLComputationSummaryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.DailyGLSummaryShortTermMemory", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ref");

                    b.HasIndex("ActDate");

                    b.ToTable("DailyGLSummaryShortTermMemoryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.GLComputationSummary", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ActualFlow")
                        .HasColumnType("float");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Difference")
                        .HasColumnType("float");

                    b.Property<double>("ExpectedFlow")
                        .HasColumnType("float");

                    b.Property<string>("GLAccount")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityKey");

                    b.HasIndex("GLAccount");

                    b.ToTable("GLSummaryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.GLSummaryShortTermMemory", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ref");

                    b.ToTable("GLSummaryShortTermMemoryTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.StreamAggregation", b =>
                {
                    b.Property<string>("EntityKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DailyStreamSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StreamCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityKey");

                    b.ToTable("StreamAggregationTable");
                });

            modelBuilder.Entity("AggregationCRS.Domain.Entities.StreamShortTermMemory", b =>
                {
                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ActDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Ref");

                    b.HasIndex("ActDate");

                    b.ToTable("StreamShortTermMemoryTable");
                });
#pragma warning restore 612, 618
        }
    }
}
